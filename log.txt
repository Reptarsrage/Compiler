Buildfile: /homes/iws/xreptarx/cse401/401_project/build.xml

init:

check.parse.files:

gen-parser:

gen-scanner:
     [java] Reading "src/Scanner/minijava.jflex"
     [java] Constructing NFA : 259 states in NFA
     [java] Converting NFA to DFA : 
     [java] .............................................................................................................................................................
     [java] 159 states before minimization, 151 states in minimized DFA
     [java] Old file "src/Scanner/scanner.java" saved as "src/Scanner/scanner.java~"
     [java] Writing code to "src/Scanner/scanner.java"

compile:
    [javac] Compiling 3 source files to /homes/iws/xreptarx/cse401/401_project/build/classes
    [javac] Note: /homes/iws/xreptarx/cse401/401_project/src/Parser/parser.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.

test-parser-all:
     [java] COMMENT CLASS ID(cse401c_correct_03) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestWhileLoopIntLiteral) LPAREN RPAREN DOT ID(test) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestWhileLoopIntLiteral) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE INT ID(i) BECOMES CONSTANT(0) SEMICOLON WHILE LPAREN CONSTANT(1) EQ CONSTANT(1) RPAREN LCURLYBRACE ID(i) PLUS PLUS SEMICOLON IF LPAREN ID(i) EQ CONSTANT(5) RPAREN LCURLYBRACE ID(break) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN ID(i) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE RETURN CONSTANT(5) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_07) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestIntVars) LPAREN RPAREN DOT ID(test) LPAREN CONSTANT(0) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestIntVars) LCURLYBRACE PUBLIC INT ID(test) LPAREN INT ID(x) RPAREN LCURLYBRACE INT ID(a) BECOMES ID(x) SEMICOLON PRINTLN LPAREN ID(a) RPAREN SEMICOLON ID(a) BECOMES ID(a) PLUS CONSTANT(1) SEMICOLON RETURN ID(a) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT COMMENT COMMENT CLASS ID(ExerciseDouble) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(Worker) LPAREN RPAREN DOT ID(OneFloat) LPAREN RPAREN RPAREN SEMICOLON COMMENT RCURLYBRACE RCURLYBRACE CLASS ID(Worker) LCURLYBRACE INT ID(x) SEMICOLON PUBLIC DOUBLE ID(AddFloatInt) LPAREN DOUBLE ID(d) COMMA INT ID(i) RPAREN LCURLYBRACE DOUBLE ID(back) SEMICOLON IF LPAREN ID(i) EQ CONSTANT(1) RPAREN LCURLYBRACE ID(back) BECOMES ID(d) PLUS D_CONSTANT(1.0) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(back) BECOMES ID(d) PLUS D_CONSTANT(2.0) SEMICOLON RCURLYBRACE RETURN ID(back) SEMICOLON RCURLYBRACE PUBLIC DOUBLE ID(OneFloat) LPAREN RPAREN LCURLYBRACE DOUBLE LBRACKET RBRACKET ID(A) SEMICOLON INT ID(i) SEMICOLON DOUBLE ID(d) SEMICOLON DOUBLE ID(aNaN) SEMICOLON DOUBLE ID(aInf) SEMICOLON IF LPAREN D_CONSTANT(3.0) LESS D_CONSTANT(4.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) LESSEQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) EQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) EQ D_CONSTANT(4.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(4.0) EQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(4.0) GREATEREQ D_CONSTANT(4.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(4.0) GREATEREQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON RCURLYBRACE ID(aNaN) BECOMES D_CONSTANT(0.0) DIV D_CONSTANT(0.0) SEMICOLON IF LPAREN ID(aNaN) EQ ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(8888) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) LESS ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(8887) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) LESSEQ ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(8886) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) EQ ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(8885) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) EQ ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON COMMENT RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(8884) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) GREATEREQ ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(8883) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN D_CONSTANT(3.0) GREATER ID(aNaN) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(8882) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(aNaN) LESS D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(7777) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(aNaN) LESSEQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(7776) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(aNaN) EQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(7775) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(aNaN) EQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON COMMENT RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(7774) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(aNaN) GREATEREQ D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(7773) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(aNaN) GREATER D_CONSTANT(3.0) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(7772) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RCURLYBRACE ID(A) BECOMES NEW DOUBLE LBRACKET CONSTANT(20) RBRACKET SEMICOLON ID(i) BECOMES CONSTANT(0) SEMICOLON ID(d) BECOMES D_CONSTANT(0.0) SEMICOLON WHILE LPAREN ID(i) LESS CONSTANT(20) RPAREN LCURLYBRACE ID(A) LBRACKET ID(i) RBRACKET BECOMES ID(d) SEMICOLON ID(d) BECOMES ID(d) PLUS D_CONSTANT(1.0) SEMICOLON ID(i) BECOMES ID(i) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN D_CONSTANT(500.00) ID(e) MINUS CONSTANT(03) MULT D_CONSTANT(2.0) ID(e) PLUS CONSTANT(000) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(BinaryTree) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(BT) LPAREN RPAREN DOT ID(Start) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE COMMENT COMMENT CLASS ID(BT) LCURLYBRACE PUBLIC INT ID(Start) LPAREN RPAREN LCURLYBRACE ID(Tree) ID(root) SEMICOLON BOOLEAN ID(ntb) SEMICOLON INT ID(nti) SEMICOLON ID(root) BECOMES NEW ID(Tree) LPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Init) LPAREN CONSTANT(16) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(100000000) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(8) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(24) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(4) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(12) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(20) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(28) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(14) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(24) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(16) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(50) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(root) D_CONSTANT(.D) ID(elete) LPAREN CONSTANT(12) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Tree) LCURLYBRACE ID(Tree) ID(left) SEMICOLON ID(Tree) ID(right) SEMICOLON INT ID(key) SEMICOLON BOOLEAN ID(has_left) SEMICOLON BOOLEAN ID(has_right) SEMICOLON ID(Tree) ID(my_null) SEMICOLON COMMENT PUBLIC BOOLEAN ID(Init) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(key) BECOMES ID(v_key) SEMICOLON ID(has_left) BECOMES FALSE SEMICOLON ID(has_right) BECOMES FALSE SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(SetRight) LPAREN ID(Tree) ID(rn) RPAREN LCURLYBRACE ID(right) BECOMES ID(rn) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(SetLeft) LPAREN ID(Tree) ID(ln) RPAREN LCURLYBRACE ID(left) BECOMES ID(ln) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC ID(Tree) ID(GetRight) LPAREN RPAREN LCURLYBRACE RETURN ID(right) SEMICOLON RCURLYBRACE PUBLIC ID(Tree) ID(GetLeft) LPAREN RPAREN LCURLYBRACE RETURN ID(left) SEMICOLON RCURLYBRACE PUBLIC INT ID(GetKey) LPAREN RPAREN LCURLYBRACE RETURN ID(key) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetKey) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(key) BECOMES ID(v_key) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(GetHas_Right) LPAREN RPAREN LCURLYBRACE RETURN ID(has_right) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(GetHas_Left) LPAREN RPAREN LCURLYBRACE RETURN ID(has_left) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetHas_Left) LPAREN BOOLEAN ID(val) RPAREN LCURLYBRACE ID(has_left) BECOMES ID(val) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetHas_Right) LPAREN BOOLEAN ID(val) RPAREN LCURLYBRACE ID(has_right) BECOMES ID(val) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC BOOLEAN ID(Compare) LPAREN INT ID(num1) COMMA INT ID(num2) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON INT ID(nti) SEMICOLON ID(ntb) BECOMES FALSE SEMICOLON ID(nti) BECOMES ID(num2) PLUS CONSTANT(1) SEMICOLON IF LPAREN ID(num1) LESS ID(num2) RPAREN ID(ntb) BECOMES FALSE SEMICOLON ELSE IF LPAREN NOT LPAREN ID(num1) LESS ID(nti) RPAREN RPAREN ID(ntb) BECOMES FALSE SEMICOLON ELSE ID(ntb) BECOMES TRUE SEMICOLON RETURN ID(ntb) SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(Insert) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(Tree) ID(new_node) SEMICOLON BOOLEAN ID(ntb) SEMICOLON BOOLEAN ID(cont) SEMICOLON INT ID(key_aux) SEMICOLON ID(Tree) ID(current_node) SEMICOLON ID(new_node) BECOMES NEW ID(Tree) LPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(new_node) DOT ID(Init) LPAREN ID(v_key) RPAREN SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(cont) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont) RPAREN LCURLYBRACE ID(key_aux) BECOMES ID(current_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN ID(v_key) LESS ID(key_aux) RPAREN LCURLYBRACE IF LPAREN ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON ELSE LCURLYBRACE ID(cont) BECOMES FALSE SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetHas_Left) LPAREN TRUE RPAREN SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetLeft) LPAREN ID(new_node) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE ELSE LCURLYBRACE IF LPAREN ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON ELSE LCURLYBRACE ID(cont) BECOMES FALSE SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetHas_Right) LPAREN TRUE RPAREN SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetRight) LPAREN ID(new_node) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE RCURLYBRACE RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(Delete) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(Tree) ID(current_node) SEMICOLON ID(Tree) ID(parent_node) SEMICOLON BOOLEAN ID(cont) SEMICOLON BOOLEAN ID(found) SEMICOLON BOOLEAN ID(is_root) SEMICOLON INT ID(key_aux) SEMICOLON BOOLEAN ID(ntb) SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(parent_node) BECOMES THIS SEMICOLON ID(cont) BECOMES TRUE SEMICOLON ID(found) BECOMES FALSE SEMICOLON ID(is_root) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont) RPAREN LCURLYBRACE ID(key_aux) BECOMES ID(current_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN ID(v_key) LESS ID(key_aux) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE ID(parent_node) BECOMES ID(current_node) SEMICOLON ID(current_node) BECOMES ID(current_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE IF LPAREN ID(key_aux) LESS ID(v_key) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE ID(parent_node) BECOMES ID(current_node) SEMICOLON ID(current_node) BECOMES ID(current_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE LCURLYBRACE IF LPAREN ID(is_root) RPAREN IF LPAREN LPAREN NOT ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN AND LPAREN NOT ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN RPAREN ID(ntb) BECOMES TRUE SEMICOLON ELSE ID(ntb) BECOMES THIS DOT ID(Remove) LPAREN ID(parent_node) COMMA ID(current_node) RPAREN SEMICOLON ELSE ID(ntb) BECOMES THIS DOT ID(Remove) LPAREN ID(parent_node) COMMA ID(current_node) RPAREN SEMICOLON ID(found) BECOMES TRUE SEMICOLON ID(cont) BECOMES FALSE SEMICOLON RCURLYBRACE ID(is_root) BECOMES FALSE SEMICOLON RCURLYBRACE RETURN ID(found) SEMICOLON RCURLYBRACE COMMENT COMMENT PUBLIC BOOLEAN ID(Remove) LPAREN ID(Tree) ID(p_node) COMMA ID(Tree) ID(c_node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON INT ID(auxkey1) SEMICOLON INT ID(auxkey2) SEMICOLON IF LPAREN ID(c_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(ntb) BECOMES THIS DOT ID(RemoveLeft) LPAREN ID(p_node) COMMA ID(c_node) RPAREN SEMICOLON ELSE IF LPAREN ID(c_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN ID(ntb) BECOMES THIS DOT ID(RemoveRight) LPAREN ID(p_node) COMMA ID(c_node) RPAREN SEMICOLON ELSE LCURLYBRACE ID(auxkey1) BECOMES ID(c_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON COMMENT COMMENT ID(auxkey2) BECOMES LPAREN ID(p_node) DOT ID(GetLeft) LPAREN RPAREN RPAREN DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN THIS DOT ID(Compare) LPAREN ID(auxkey1) COMMA ID(auxkey2) RPAREN RPAREN LCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetLeft) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Left) LPAREN FALSE RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetRight) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Right) LPAREN FALSE RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE RETURN TRUE SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC BOOLEAN ID(RemoveRight) LPAREN ID(Tree) ID(p_node) COMMA ID(Tree) ID(c_node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON WHILE LPAREN ID(c_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE COMMENT COMMENT COMMENT ID(ntb) BECOMES ID(c_node) DOT ID(SetKey) LPAREN LPAREN ID(c_node) DOT ID(GetRight) LPAREN RPAREN RPAREN DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON ID(p_node) BECOMES ID(c_node) SEMICOLON ID(c_node) BECOMES ID(c_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON RCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetRight) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Right) LPAREN FALSE RPAREN SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC BOOLEAN ID(RemoveLeft) LPAREN ID(Tree) ID(p_node) COMMA ID(Tree) ID(c_node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON WHILE LPAREN ID(c_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE COMMENT COMMENT COMMENT ID(ntb) BECOMES ID(c_node) DOT ID(SetKey) LPAREN LPAREN ID(c_node) DOT ID(GetLeft) LPAREN RPAREN RPAREN DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON ID(p_node) BECOMES ID(c_node) SEMICOLON ID(c_node) BECOMES ID(c_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON RCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetLeft) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Left) LPAREN FALSE RPAREN SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Search) LPAREN INT ID(v_key) RPAREN LCURLYBRACE BOOLEAN ID(cont) SEMICOLON INT ID(ifound) SEMICOLON ID(Tree) ID(current_node) SEMICOLON INT ID(key_aux) SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(cont) BECOMES TRUE SEMICOLON ID(ifound) BECOMES CONSTANT(0) SEMICOLON WHILE LPAREN ID(cont) RPAREN LCURLYBRACE ID(key_aux) BECOMES ID(current_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN ID(v_key) LESS ID(key_aux) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE IF LPAREN ID(key_aux) LESS ID(v_key) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE LCURLYBRACE ID(ifound) BECOMES CONSTANT(1) SEMICOLON ID(cont) BECOMES FALSE SEMICOLON RCURLYBRACE RCURLYBRACE RETURN ID(ifound) SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(Print) LPAREN RPAREN LCURLYBRACE ID(Tree) ID(current_node) SEMICOLON BOOLEAN ID(ntb) SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(ntb) BECOMES THIS DOT ID(RecPrint) LPAREN ID(current_node) RPAREN SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(RecPrint) LPAREN ID(Tree) ID(node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON IF LPAREN ID(node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE COMMENT COMMENT ID(ntb) BECOMES THIS DOT ID(RecPrint) LPAREN ID(node) DOT ID(GetLeft) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(ntb) BECOMES TRUE SEMICOLON PRINTLN LPAREN ID(node) DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON IF LPAREN ID(node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE COMMENT COMMENT ID(ntb) BECOMES THIS DOT ID(RecPrint) LPAREN ID(node) DOT ID(GetRight) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(ntb) BECOMES TRUE SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(QuickSort) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(QS) LPAREN RPAREN DOT ID(Start) LPAREN CONSTANT(10) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE COMMENT COMMENT COMMENT CLASS ID(QS) LCURLYBRACE INT LBRACKET RBRACKET ID(number) SEMICOLON INT ID(size) SEMICOLON COMMENT COMMENT PUBLIC INT ID(Start) LPAREN INT ID(sz) RPAREN LCURLYBRACE INT ID(aux01) SEMICOLON ID(aux01) BECOMES THIS DOT ID(Init) LPAREN ID(sz) RPAREN SEMICOLON ID(aux01) BECOMES THIS DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON ID(aux01) BECOMES ID(size) MINUS CONSTANT(1) SEMICOLON ID(aux01) BECOMES THIS DOT ID(Sort) LPAREN CONSTANT(0) COMMA ID(aux01) RPAREN SEMICOLON ID(aux01) BECOMES THIS DOT ID(Print) LPAREN RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Sort) LPAREN INT ID(left) COMMA INT ID(right) RPAREN LCURLYBRACE INT ID(v) SEMICOLON INT ID(i) SEMICOLON INT ID(j) SEMICOLON INT ID(nt) SEMICOLON INT ID(t) SEMICOLON BOOLEAN ID(cont01) SEMICOLON BOOLEAN ID(cont02) SEMICOLON INT ID(aux03) SEMICOLON ID(t) BECOMES CONSTANT(0) SEMICOLON IF LPAREN ID(left) LESS ID(right) RPAREN LCURLYBRACE ID(v) BECOMES ID(number) LBRACKET ID(right) RBRACKET SEMICOLON ID(i) BECOMES ID(left) MINUS CONSTANT(1) SEMICOLON ID(j) BECOMES ID(right) SEMICOLON ID(cont01) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont01) RPAREN LCURLYBRACE ID(cont02) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont02) RPAREN LCURLYBRACE ID(i) BECOMES ID(i) PLUS CONSTANT(1) SEMICOLON ID(aux03) BECOMES ID(number) LBRACKET ID(i) RBRACKET SEMICOLON IF LPAREN NOT LPAREN ID(aux03) LESS ID(v) RPAREN RPAREN ID(cont02) BECOMES FALSE SEMICOLON ELSE ID(cont02) BECOMES TRUE SEMICOLON RCURLYBRACE ID(cont02) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont02) RPAREN LCURLYBRACE ID(j) BECOMES ID(j) MINUS CONSTANT(1) SEMICOLON ID(aux03) BECOMES ID(number) LBRACKET ID(j) RBRACKET SEMICOLON IF LPAREN NOT LPAREN ID(v) LESS ID(aux03) RPAREN RPAREN ID(cont02) BECOMES FALSE SEMICOLON ELSE ID(cont02) BECOMES TRUE SEMICOLON RCURLYBRACE ID(t) BECOMES ID(number) LBRACKET ID(i) RBRACKET SEMICOLON ID(number) LBRACKET ID(i) RBRACKET BECOMES ID(number) LBRACKET ID(j) RBRACKET SEMICOLON ID(number) LBRACKET ID(j) RBRACKET BECOMES ID(t) SEMICOLON COMMENT IF LPAREN ID(j) LESS LPAREN ID(i) PLUS CONSTANT(1) RPAREN RPAREN ID(cont01) BECOMES FALSE SEMICOLON ELSE ID(cont01) BECOMES TRUE SEMICOLON RCURLYBRACE ID(number) LBRACKET ID(j) RBRACKET BECOMES ID(number) LBRACKET ID(i) RBRACKET SEMICOLON ID(number) LBRACKET ID(i) RBRACKET BECOMES ID(number) LBRACKET ID(right) RBRACKET SEMICOLON ID(number) LBRACKET ID(right) RBRACKET BECOMES ID(t) SEMICOLON ID(nt) BECOMES THIS DOT ID(Sort) LPAREN ID(left) COMMA ID(i) MINUS CONSTANT(1) RPAREN SEMICOLON ID(nt) BECOMES THIS DOT ID(Sort) LPAREN ID(i) PLUS CONSTANT(1) COMMA ID(right) RPAREN SEMICOLON RCURLYBRACE ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Print) LPAREN RPAREN LCURLYBRACE INT ID(j) SEMICOLON ID(j) BECOMES CONSTANT(0) SEMICOLON WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE PRINTLN LPAREN ID(number) LBRACKET ID(j) RBRACKET RPAREN SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Init) LPAREN INT ID(sz) RPAREN LCURLYBRACE ID(size) BECOMES ID(sz) SEMICOLON ID(number) BECOMES NEW INT LBRACKET ID(sz) RBRACKET SEMICOLON ID(number) LBRACKET CONSTANT(0) RBRACKET BECOMES CONSTANT(20) SEMICOLON ID(number) LBRACKET CONSTANT(1) RBRACKET BECOMES CONSTANT(7) SEMICOLON ID(number) LBRACKET CONSTANT(2) RBRACKET BECOMES CONSTANT(12) SEMICOLON ID(number) LBRACKET CONSTANT(3) RBRACKET BECOMES CONSTANT(18) SEMICOLON ID(number) LBRACKET CONSTANT(4) RBRACKET BECOMES CONSTANT(2) SEMICOLON ID(number) LBRACKET CONSTANT(5) RBRACKET BECOMES CONSTANT(11) SEMICOLON ID(number) LBRACKET CONSTANT(6) RBRACKET BECOMES CONSTANT(6) SEMICOLON ID(number) LBRACKET CONSTANT(7) RBRACKET BECOMES CONSTANT(9) SEMICOLON ID(number) LBRACKET CONSTANT(8) RBRACKET BECOMES CONSTANT(19) SEMICOLON ID(number) LBRACKET CONSTANT(9) RBRACKET BECOMES CONSTANT(5) SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_13) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(TestFailure) ID(test) BECOMES NEW ID(TestFailure) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestFailure) LCURLYBRACE PUBLIC VOID ID(test1) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(LinearSearch) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(LS) LPAREN RPAREN DOT ID(Start) LPAREN CONSTANT(10) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE COMMENT COMMENT COMMENT CLASS ID(LS) LCURLYBRACE INT LBRACKET RBRACKET ID(number) SEMICOLON INT ID(size) SEMICOLON COMMENT COMMENT PUBLIC INT ID(Start) LPAREN INT ID(sz) RPAREN LCURLYBRACE INT ID(aux01) SEMICOLON INT ID(aux02) SEMICOLON ID(aux01) BECOMES THIS DOT ID(Init) LPAREN ID(sz) RPAREN SEMICOLON ID(aux02) BECOMES THIS DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(9999) RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(Search) LPAREN CONSTANT(8) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(Search) LPAREN CONSTANT(17) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(Search) LPAREN CONSTANT(50) RPAREN RPAREN SEMICOLON RETURN CONSTANT(55) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Print) LPAREN RPAREN LCURLYBRACE INT ID(j) SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE PRINTLN LPAREN ID(number) LBRACKET ID(j) RBRACKET RPAREN SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT COMMENT PUBLIC INT ID(Search) LPAREN INT ID(num) RPAREN LCURLYBRACE INT ID(j) SEMICOLON BOOLEAN ID(ls01) SEMICOLON INT ID(ifound) SEMICOLON INT ID(aux01) SEMICOLON INT ID(aux02) SEMICOLON INT ID(nt) SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON ID(ls01) BECOMES FALSE SEMICOLON ID(ifound) BECOMES CONSTANT(0) SEMICOLON COMMENT WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE ID(aux01) BECOMES ID(number) LBRACKET ID(j) RBRACKET SEMICOLON ID(aux02) BECOMES ID(num) PLUS CONSTANT(1) SEMICOLON IF LPAREN ID(aux01) LESS ID(num) RPAREN ID(nt) BECOMES CONSTANT(0) SEMICOLON ELSE IF LPAREN NOT LPAREN ID(aux01) LESS ID(aux02) RPAREN RPAREN ID(nt) BECOMES CONSTANT(0) SEMICOLON ELSE LCURLYBRACE ID(ls01) BECOMES TRUE SEMICOLON ID(ifound) BECOMES CONSTANT(1) SEMICOLON ID(j) BECOMES ID(size) SEMICOLON RCURLYBRACE ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN ID(ifound) SEMICOLON RCURLYBRACE COMMENT COMMENT PUBLIC INT ID(Init) LPAREN INT ID(sz) RPAREN LCURLYBRACE INT ID(j) SEMICOLON INT ID(k) SEMICOLON INT ID(aux01) SEMICOLON INT ID(aux02) SEMICOLON ID(size) BECOMES ID(sz) SEMICOLON ID(number) BECOMES NEW INT LBRACKET ID(sz) RBRACKET SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON ID(k) BECOMES ID(size) PLUS CONSTANT(1) SEMICOLON WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE ID(aux01) BECOMES CONSTANT(2) MULT ID(j) SEMICOLON ID(aux02) BECOMES ID(k) MINUS CONSTANT(3) SEMICOLON ID(number) LBRACKET ID(j) RBRACKET BECOMES ID(aux01) PLUS ID(aux02) SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON ID(k) BECOMES ID(k) MINUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_17) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(TestFailure) ID(test) BECOMES NEW ID(TestFailure) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestFailure) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(BinarySearch) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(BS) LPAREN RPAREN DOT ID(Start) LPAREN CONSTANT(20) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE COMMENT COMMENT COMMENT CLASS ID(BS) LCURLYBRACE INT LBRACKET RBRACKET ID(number) SEMICOLON INT ID(size) SEMICOLON COMMENT COMMENT PUBLIC INT ID(Start) LPAREN INT ID(sz) RPAREN LCURLYBRACE INT ID(aux01) SEMICOLON INT ID(aux02) SEMICOLON ID(aux01) BECOMES THIS DOT ID(Init) LPAREN ID(sz) RPAREN SEMICOLON ID(aux02) BECOMES THIS DOT ID(Print) LPAREN RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(8) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(19) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(20) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(21) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(37) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(38) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(39) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON IF LPAREN THIS DOT ID(Search) LPAREN CONSTANT(50) RPAREN RPAREN PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON ELSE PRINTLN LPAREN CONSTANT(0) RPAREN SEMICOLON RETURN CONSTANT(999) SEMICOLON RCURLYBRACE COMMENT COMMENT PUBLIC BOOLEAN ID(Search) LPAREN INT ID(num) RPAREN LCURLYBRACE BOOLEAN ID(bs01) SEMICOLON INT ID(right) SEMICOLON INT ID(left) SEMICOLON BOOLEAN ID(var_cont) SEMICOLON INT ID(medium) SEMICOLON INT ID(aux01) SEMICOLON INT ID(nt) SEMICOLON ID(aux01) BECOMES CONSTANT(0) SEMICOLON ID(bs01) BECOMES FALSE SEMICOLON ID(right) BECOMES ID(number) DOT LENGTH SEMICOLON ID(right) BECOMES ID(right) MINUS CONSTANT(1) SEMICOLON ID(left) BECOMES CONSTANT(0) SEMICOLON ID(var_cont) BECOMES TRUE SEMICOLON WHILE LPAREN ID(var_cont) RPAREN LCURLYBRACE ID(medium) BECOMES ID(left) PLUS ID(right) SEMICOLON ID(medium) BECOMES THIS D_CONSTANT(.D) ID(iv) LPAREN ID(medium) RPAREN SEMICOLON ID(aux01) BECOMES ID(number) LBRACKET ID(medium) RBRACKET SEMICOLON IF LPAREN ID(num) LESS ID(aux01) RPAREN ID(right) BECOMES ID(medium) MINUS CONSTANT(1) SEMICOLON ELSE ID(left) BECOMES ID(medium) PLUS CONSTANT(1) SEMICOLON IF LPAREN THIS DOT ID(Compare) LPAREN ID(aux01) COMMA ID(num) RPAREN RPAREN ID(var_cont) BECOMES FALSE SEMICOLON ELSE ID(var_cont) BECOMES TRUE SEMICOLON IF LPAREN ID(right) LESS ID(left) RPAREN ID(var_cont) BECOMES FALSE SEMICOLON ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON RCURLYBRACE IF LPAREN THIS DOT ID(Compare) LPAREN ID(aux01) COMMA ID(num) RPAREN RPAREN ID(bs01) BECOMES TRUE SEMICOLON ELSE ID(bs01) BECOMES FALSE SEMICOLON RETURN ID(bs01) SEMICOLON RCURLYBRACE COMMENT COMMENT PUBLIC INT ID(Div) LPAREN INT ID(num) RPAREN LCURLYBRACE INT ID(count01) SEMICOLON INT ID(count02) SEMICOLON INT ID(aux03) SEMICOLON ID(count01) BECOMES CONSTANT(0) SEMICOLON ID(count02) BECOMES CONSTANT(0) SEMICOLON ID(aux03) BECOMES ID(num) MINUS CONSTANT(1) SEMICOLON WHILE LPAREN ID(count02) LESS ID(aux03) RPAREN LCURLYBRACE ID(count01) BECOMES ID(count01) PLUS CONSTANT(1) SEMICOLON ID(count02) BECOMES ID(count02) PLUS CONSTANT(2) SEMICOLON RCURLYBRACE RETURN ID(count01) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC BOOLEAN ID(Compare) LPAREN INT ID(num1) COMMA INT ID(num2) RPAREN LCURLYBRACE BOOLEAN ID(retval) SEMICOLON INT ID(aux02) SEMICOLON ID(retval) BECOMES FALSE SEMICOLON ID(aux02) BECOMES ID(num2) PLUS CONSTANT(1) SEMICOLON IF LPAREN ID(num1) LESS ID(num2) RPAREN ID(retval) BECOMES FALSE SEMICOLON ELSE IF LPAREN NOT LPAREN ID(num1) LESS ID(aux02) RPAREN RPAREN ID(retval) BECOMES FALSE SEMICOLON ELSE ID(retval) BECOMES TRUE SEMICOLON RETURN ID(retval) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Print) LPAREN RPAREN LCURLYBRACE INT ID(j) SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE PRINTLN LPAREN ID(number) LBRACKET ID(j) RBRACKET RPAREN SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE PRINTLN LPAREN CONSTANT(99999) RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Init) LPAREN INT ID(sz) RPAREN LCURLYBRACE INT ID(j) SEMICOLON INT ID(k) SEMICOLON INT ID(aux02) SEMICOLON INT ID(aux01) SEMICOLON ID(size) BECOMES ID(sz) SEMICOLON ID(number) BECOMES NEW INT LBRACKET ID(sz) RBRACKET SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON ID(k) BECOMES ID(size) PLUS CONSTANT(1) SEMICOLON WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE ID(aux01) BECOMES CONSTANT(2) MULT ID(j) SEMICOLON ID(aux02) BECOMES ID(k) MINUS CONSTANT(3) SEMICOLON ID(number) LBRACKET ID(j) RBRACKET BECOMES ID(aux01) PLUS ID(aux02) SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON ID(k) BECOMES ID(k) MINUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(DoubleOutput) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(DoubleOutputWorker) LPAREN RPAREN D_CONSTANT(.d) ID(oWork) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(DoubleOutputWorker) LCURLYBRACE PUBLIC DOUBLE ID(doE) LPAREN RPAREN LCURLYBRACE RETURN D_CONSTANT(2.718281828459045) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC DOUBLE ID(doWork) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN D_CONSTANT(0.0) DIV D_CONSTANT(0.0) RPAREN SEMICOLON COMMENT PRINTLN LPAREN D_CONSTANT(1.0) DIV D_CONSTANT(0.0) RPAREN SEMICOLON COMMENT PRINTLN LPAREN LPAREN D_CONSTANT(0.0) MINUS D_CONSTANT(1.0) RPAREN DIV D_CONSTANT(0.0) RPAREN SEMICOLON COMMENT PRINTLN LPAREN D_CONSTANT(0.0) MINUS D_CONSTANT(0.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1.5) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1.0) MULT D_CONSTANT(2.718281828459045) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(10.0) MULT D_CONSTANT(2.718281828459045) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(100.0) MULT D_CONSTANT(2.718281828459045) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1000.0) MULT D_CONSTANT(2.718281828459045) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(10000.0) MULT D_CONSTANT(2.718281828459045) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(0.5) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(0.05) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(0.005) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(0.0005) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(2.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(20.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(200.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(2000.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(20000.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(200000.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(2000000.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(20000000.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(200000000.0) RPAREN SEMICOLON RETURN D_CONSTANT(9999.0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(Factorial) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(Fac) LPAREN RPAREN DOT ID(ComputeFac) LPAREN CONSTANT(10) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Fac) LCURLYBRACE PUBLIC INT ID(ComputeFac) LPAREN INT ID(num) RPAREN LCURLYBRACE INT ID(num_aux) SEMICOLON IF LPAREN ID(num) LESS CONSTANT(1) RPAREN LCURLYBRACE ID(num_aux) BECOMES CONSTANT(1) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(num_aux) BECOMES ID(num) MULT LPAREN THIS DOT ID(ComputeFac) LPAREN ID(num) MINUS CONSTANT(1) RPAREN RPAREN SEMICOLON RCURLYBRACE RETURN ID(num_aux) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT CLASS ID(Pi) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(PiWorker) LPAREN RPAREN D_CONSTANT(.d) ID(oWork) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(PiWorker) LCURLYBRACE PUBLIC INT ID(writeDigit) LPAREN INT ID(x) RPAREN LCURLYBRACE PRINTLN LPAREN ID(x) RPAREN SEMICOLON RETURN ID(x) SEMICOLON RCURLYBRACE PUBLIC INT ID(doWork) LPAREN RPAREN LCURLYBRACE INT ID(n) SEMICOLON INT ID(len) SEMICOLON INT ID(i) SEMICOLON INT ID(j) SEMICOLON INT ID(k) SEMICOLON INT ID(q) SEMICOLON INT ID(x) SEMICOLON INT ID(nines) SEMICOLON INT ID(predigit) SEMICOLON INT ID(junk) SEMICOLON INT LBRACKET RBRACKET ID(a) SEMICOLON ID(n) BECOMES CONSTANT(1000) SEMICOLON ID(len) BECOMES CONSTANT(10) MULT ID(n) DIV CONSTANT(3) SEMICOLON ID(a) BECOMES NEW INT LBRACKET ID(len) PLUS CONSTANT(1) RBRACKET SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON WHILE LPAREN ID(j) LESSEQ ID(len) RPAREN LCURLYBRACE ID(a) LBRACKET ID(j) RBRACKET BECOMES CONSTANT(2) SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE ID(nines) BECOMES CONSTANT(0) SEMICOLON ID(predigit) BECOMES CONSTANT(0) SEMICOLON ID(j) BECOMES CONSTANT(1) SEMICOLON WHILE LPAREN ID(j) LESSEQ ID(n) RPAREN LCURLYBRACE ID(q) BECOMES CONSTANT(0) SEMICOLON ID(i) BECOMES ID(len) SEMICOLON WHILE LPAREN ID(i) GREATEREQ CONSTANT(1) RPAREN LCURLYBRACE ID(x) BECOMES CONSTANT(10) MULT ID(a) LBRACKET ID(i) RBRACKET PLUS ID(q) MULT ID(i) SEMICOLON ID(a) LBRACKET ID(i) RBRACKET BECOMES ID(x) MOD LPAREN CONSTANT(2) MULT ID(i) MINUS CONSTANT(1) RPAREN SEMICOLON ID(q) BECOMES ID(x) DIV LPAREN CONSTANT(2) MULT ID(i) MINUS CONSTANT(1) RPAREN SEMICOLON ID(i) BECOMES ID(i) MINUS CONSTANT(1) SEMICOLON RCURLYBRACE ID(a) LBRACKET CONSTANT(1) RBRACKET BECOMES ID(q) MOD CONSTANT(10) SEMICOLON ID(q) BECOMES ID(q) DIV CONSTANT(10) SEMICOLON IF LPAREN ID(q) EQ CONSTANT(9) RPAREN LCURLYBRACE ID(nines) BECOMES ID(nines) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE IF LPAREN ID(q) EQ CONSTANT(10) RPAREN LCURLYBRACE ID(junk) BECOMES THIS DOT ID(writeDigit) LPAREN ID(predigit) PLUS CONSTANT(1) RPAREN SEMICOLON ID(k) BECOMES CONSTANT(1) SEMICOLON WHILE LPAREN ID(k) LESSEQ ID(nines) RPAREN LCURLYBRACE ID(junk) BECOMES THIS DOT ID(writeDigit) LPAREN CONSTANT(0) RPAREN SEMICOLON ID(k) BECOMES ID(k) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE ID(predigit) BECOMES CONSTANT(0) SEMICOLON ID(nines) BECOMES CONSTANT(0) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(junk) BECOMES THIS DOT ID(writeDigit) LPAREN ID(predigit) RPAREN SEMICOLON ID(predigit) BECOMES ID(q) SEMICOLON IF LPAREN ID(nines) EQ CONSTANT(0) RPAREN LCURLYBRACE ID(k) BECOMES CONSTANT(1) SEMICOLON WHILE LPAREN ID(k) LESSEQ ID(nines) RPAREN LCURLYBRACE ID(junk) BECOMES THIS DOT ID(writeDigit) LPAREN CONSTANT(9) RPAREN SEMICOLON ID(k) BECOMES ID(k) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE ID(nines) BECOMES CONSTANT(0) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE RCURLYBRACE RCURLYBRACE RCURLYBRACE ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE ID(junk) BECOMES THIS DOT ID(writeDigit) LPAREN ID(predigit) RPAREN SEMICOLON RETURN CONSTANT(111111) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT COMMENT CLASS ID(cse401c_ctfail_16) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestOverload) LPAREN RPAREN DOT ID(a) LPAREN CONSTANT(0) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestOverload) LCURLYBRACE PUBLIC INT ID(a) LPAREN RPAREN LCURLYBRACE RETURN CONSTANT(1) SEMICOLON RCURLYBRACE PUBLIC INT ID(a) LPAREN INT ID(x) RPAREN LCURLYBRACE RETURN ID(x) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT CLASS ID(Sqrt) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(SqrtWorker) LPAREN RPAREN DOT ID(Sqrt) LPAREN D_CONSTANT(2.0) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(SqrtWorker) LCURLYBRACE COMMENT COMMENT COMMENT PUBLIC DOUBLE ID(Sqrt) LPAREN DOUBLE ID(c) RPAREN LCURLYBRACE DOUBLE ID(epsilon) SEMICOLON COMMENT DOUBLE ID(t) SEMICOLON COMMENT ID(epsilon) BECOMES D_CONSTANT(1e-15) SEMICOLON ID(t) BECOMES ID(c) SEMICOLON COMMENT COMMENT COMMENT WHILE LPAREN THIS DOT ID(Abs) LPAREN ID(t) MINUS ID(c) DIV ID(t) RPAREN GREATER ID(epsilon) MULT ID(t) RPAREN LCURLYBRACE ID(t) BECOMES LPAREN ID(c) DIV ID(t) PLUS ID(t) RPAREN DIV D_CONSTANT(2.0) SEMICOLON RCURLYBRACE RETURN ID(t) SEMICOLON RCURLYBRACE PUBLIC DOUBLE ID(Abs) LPAREN DOUBLE ID(v) RPAREN LCURLYBRACE DOUBLE ID(abs) SEMICOLON IF LPAREN ID(v) LESS D_CONSTANT(0.0) RPAREN LCURLYBRACE ID(abs) BECOMES D_CONSTANT(0.0) MINUS ID(v) SEMICOLON COMMENT RCURLYBRACE ELSE LCURLYBRACE ID(abs) BECOMES ID(v) SEMICOLON RCURLYBRACE RETURN ID(abs) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_02) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestIntLiteralCompareBranch) LPAREN RPAREN DOT ID(test) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestIntLiteralCompareBranch) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE IF LPAREN CONSTANT(1) EQ CONSTANT(1) RPAREN LCURLYBRACE RETURN CONSTANT(1) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_06) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestFunctionDispatch) LPAREN RPAREN DOT ID(test) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestFunctionDispatch) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE RETURN CONSTANT(1) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT COMMENT COMMENT CLASS ID(Asin) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(AsinWorker) LPAREN RPAREN D_CONSTANT(.d) ID(river) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(AsinWorker) LCURLYBRACE PUBLIC INT ID(driver) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN THIS DOT ID(asin) LPAREN D_CONSTANT(1.0) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(asin) LPAREN D_CONSTANT(0.5) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(asin) LPAREN D_CONSTANT(2.0) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(asin) LPAREN D_CONSTANT(0.0) MINUS D_CONSTANT(1.0) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(asin) LPAREN D_CONSTANT(0.0) MINUS D_CONSTANT(0.5) RPAREN RPAREN SEMICOLON PRINTLN LPAREN THIS DOT ID(asin) LPAREN D_CONSTANT(0.0) MINUS D_CONSTANT(2.0) RPAREN RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(2.0) MULT THIS DOT ID(asin) LPAREN D_CONSTANT(1.0) RPAREN RPAREN SEMICOLON RETURN CONSTANT(9999) SEMICOLON RCURLYBRACE PUBLIC DOUBLE ID(Pi) LPAREN RPAREN LCURLYBRACE RETURN D_CONSTANT(3.14159265358979323846264) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC DOUBLE ID(asin) LPAREN DOUBLE ID(x) RPAREN LCURLYBRACE BOOLEAN ID(sign) SEMICOLON DOUBLE ID(back) SEMICOLON DOUBLE ID(temp) SEMICOLON IF LPAREN ID(x) EQ D_CONSTANT(0.0) RPAREN LCURLYBRACE ID(temp) BECOMES ID(x) SEMICOLON COMMENT RCURLYBRACE ELSE LCURLYBRACE IF LPAREN ID(x) LESS D_CONSTANT(0.0) RPAREN LCURLYBRACE ID(x) BECOMES D_CONSTANT(0.0) MINUS ID(x) SEMICOLON ID(sign) BECOMES TRUE SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(sign) BECOMES FALSE SEMICOLON RCURLYBRACE IF LPAREN ID(x) GREATER D_CONSTANT(1.0) RPAREN LCURLYBRACE ID(temp) BECOMES THIS DOT ID(NaN) LPAREN RPAREN SEMICOLON COMMENT RCURLYBRACE ELSE LCURLYBRACE ID(temp) BECOMES THIS DOT ID(Sqrt) LPAREN D_CONSTANT(1.0) MINUS ID(x) MULT ID(x) RPAREN SEMICOLON IF LPAREN ID(x) GREATER D_CONSTANT(0.7) RPAREN LCURLYBRACE ID(temp) BECOMES THIS DOT ID(Pi) LPAREN RPAREN DIV D_CONSTANT(2.0) MINUS THIS DOT ID(satan) LPAREN ID(temp) DIV ID(x) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(temp) BECOMES THIS DOT ID(satan) LPAREN ID(x) DIV ID(temp) RPAREN SEMICOLON RCURLYBRACE IF LPAREN ID(sign) RPAREN LCURLYBRACE ID(temp) BECOMES D_CONSTANT(0.0) MINUS ID(temp) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(temp) BECOMES ID(temp) SEMICOLON RCURLYBRACE RCURLYBRACE RCURLYBRACE RETURN ID(temp) SEMICOLON RCURLYBRACE PUBLIC DOUBLE ID(NaN) LPAREN RPAREN LCURLYBRACE RETURN D_CONSTANT(0.0) DIV D_CONSTANT(0.0) SEMICOLON RCURLYBRACE PUBLIC DOUBLE ID(Abs) LPAREN DOUBLE ID(v) RPAREN LCURLYBRACE DOUBLE ID(abs) SEMICOLON IF LPAREN ID(v) LESS D_CONSTANT(0.0) RPAREN LCURLYBRACE ID(abs) BECOMES D_CONSTANT(0.0) MINUS ID(v) SEMICOLON COMMENT RCURLYBRACE ELSE LCURLYBRACE ID(abs) BECOMES ID(v) SEMICOLON RCURLYBRACE RETURN ID(abs) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT COMMENT COMMENT PUBLIC DOUBLE ID(Sqrt) LPAREN DOUBLE ID(c) RPAREN LCURLYBRACE DOUBLE ID(epsilon) SEMICOLON COMMENT DOUBLE ID(t) SEMICOLON COMMENT ID(epsilon) BECOMES D_CONSTANT(1e-15) SEMICOLON ID(t) BECOMES ID(c) SEMICOLON COMMENT COMMENT COMMENT WHILE LPAREN THIS DOT ID(Abs) LPAREN ID(t) MINUS ID(c) DIV ID(t) RPAREN GREATER ID(epsilon) MULT ID(t) RPAREN LCURLYBRACE ID(t) BECOMES LPAREN ID(c) DIV ID(t) PLUS ID(t) RPAREN DIV D_CONSTANT(2.0) SEMICOLON RCURLYBRACE RETURN ID(t) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT PUBLIC DOUBLE ID(satan) LPAREN DOUBLE ID(x) RPAREN LCURLYBRACE DOUBLE ID(Morebits) SEMICOLON DOUBLE ID(Tan3pio8) SEMICOLON DOUBLE ID(back) SEMICOLON ID(Morebits) BECOMES D_CONSTANT(6.123233995736765886130) ID(e) MINUS CONSTANT(17) SEMICOLON COMMENT ID(Tan3pio8) BECOMES D_CONSTANT(2.41421356237309504880) SEMICOLON COMMENT IF LPAREN ID(x) LESSEQ D_CONSTANT(0.66) RPAREN LCURLYBRACE ID(back) BECOMES THIS DOT ID(xatan) LPAREN ID(x) RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE IF LPAREN ID(x) GREATER ID(Tan3pio8) RPAREN LCURLYBRACE ID(back) BECOMES THIS DOT ID(Pi) LPAREN RPAREN DIV D_CONSTANT(2.0) MINUS THIS DOT ID(xatan) LPAREN D_CONSTANT(1.0) DIV ID(x) RPAREN PLUS ID(Morebits) SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(back) BECOMES THIS DOT ID(Pi) LPAREN RPAREN DIV D_CONSTANT(4.0) PLUS THIS DOT ID(xatan) LPAREN LPAREN ID(x) MINUS D_CONSTANT(1.0) RPAREN DIV LPAREN ID(x) PLUS D_CONSTANT(1.0) RPAREN RPAREN PLUS D_CONSTANT(0.5) MULT ID(Morebits) SEMICOLON RCURLYBRACE RCURLYBRACE RETURN ID(back) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT COMMENT COMMENT PUBLIC DOUBLE ID(xatan) LPAREN DOUBLE ID(x) RPAREN LCURLYBRACE DOUBLE ID(z) SEMICOLON DOUBLE ID(P0) SEMICOLON DOUBLE ID(P1) SEMICOLON DOUBLE ID(P2) SEMICOLON DOUBLE ID(P3) SEMICOLON DOUBLE ID(P4) SEMICOLON DOUBLE ID(Q0) SEMICOLON DOUBLE ID(Q1) SEMICOLON DOUBLE ID(Q2) SEMICOLON DOUBLE ID(Q3) SEMICOLON DOUBLE ID(Q4) SEMICOLON ID(P0) BECOMES D_CONSTANT(0.0) MINUS D_CONSTANT(8.750608600031904122785) ID(e) MINUS CONSTANT(01) SEMICOLON ID(P1) BECOMES D_CONSTANT(0.0) MINUS D_CONSTANT(1.615753718733365076637) ID(e) PLUS CONSTANT(01) SEMICOLON ID(P2) BECOMES D_CONSTANT(0.0) MINUS D_CONSTANT(7.500855792314704667340) ID(e) PLUS CONSTANT(01) SEMICOLON ID(P3) BECOMES D_CONSTANT(0.0) MINUS D_CONSTANT(1.228866684490136173410) ID(e) PLUS CONSTANT(02) SEMICOLON ID(P4) BECOMES D_CONSTANT(0.0) MINUS D_CONSTANT(6.485021904942025371773) ID(e) PLUS CONSTANT(01) SEMICOLON ID(Q0) BECOMES D_CONSTANT(0.0) PLUS D_CONSTANT(2.485846490142306297962) ID(e) PLUS CONSTANT(01) SEMICOLON ID(Q1) BECOMES D_CONSTANT(0.0) PLUS D_CONSTANT(1.650270098316988542046) ID(e) PLUS CONSTANT(02) SEMICOLON ID(Q2) BECOMES D_CONSTANT(0.0) PLUS D_CONSTANT(4.328810604912902668951) ID(e) PLUS CONSTANT(02) SEMICOLON ID(Q3) BECOMES D_CONSTANT(0.0) PLUS D_CONSTANT(4.853903996359136964868) ID(e) PLUS CONSTANT(02) SEMICOLON ID(Q4) BECOMES D_CONSTANT(0.0) PLUS D_CONSTANT(1.945506571482613964425) ID(e) PLUS CONSTANT(02) SEMICOLON ID(z) BECOMES ID(x) MULT ID(x) SEMICOLON ID(z) BECOMES ID(z) MULT LPAREN LPAREN LPAREN LPAREN ID(P0) MULT ID(z) PLUS ID(P1) RPAREN MULT ID(z) PLUS ID(P2) RPAREN MULT ID(z) PLUS ID(P3) RPAREN MULT ID(z) PLUS ID(P4) RPAREN DIV LPAREN LPAREN LPAREN LPAREN LPAREN ID(z) PLUS ID(Q0) RPAREN MULT ID(z) PLUS ID(Q1) RPAREN MULT ID(z) PLUS ID(Q2) RPAREN MULT ID(z) PLUS ID(Q3) RPAREN MULT ID(z) PLUS ID(Q4) RPAREN SEMICOLON ID(z) BECOMES ID(x) MULT ID(z) PLUS ID(x) SEMICOLON RETURN ID(z) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_10) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE DOUBLE ID(d1) BECOMES D_CONSTANT(2e+01) SEMICOLON DOUBLE ID(d2) BECOMES D_CONSTANT(0.003) SEMICOLON DOUBLE ID(d3) BECOMES D_CONSTANT(.004D) SEMICOLON DOUBLE ID(d4) BECOMES D_CONSTANT(34e10) SEMICOLON ID(TestDoubleSimple) ID(test) BECOMES NEW ID(TestDoubleSimple) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN ID(d1) COMMA ID(d4) RPAREN SEMICOLON PRINTLN LPAREN ID(d3) MULT ID(d1) RPAREN SEMICOLON PRINTLN LPAREN ID(d1) DIV ID(d1) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(3.) MULT ID(d2) RPAREN SEMICOLON PRINTLN LPAREN ID(d3) MULT CONSTANT(3) MULT ID(d4) PLUS ID(d2) MINUS ID(d1) MOD ID(d3) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestDoubleSimple) LCURLYBRACE PUBLIC VOID ID(test) LPAREN DOUBLE ID(d1) COMMA DOUBLE ID(d2) RPAREN LCURLYBRACE PRINTLN LPAREN ID(d1) DIV ID(d2) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_08) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(TestDoubleSimple) ID(test) BECOMES NEW ID(TestDoubleSimple) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestDoubleSimple) LCURLYBRACE PUBLIC VOID ID(test) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN D_CONSTANT(1.0) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1e00) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(10e-1) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1e+00) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(.1) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1.) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1d) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1D) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1.01d) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(1E000004) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_21) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(foo) ID(i) SEMICOLON PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_14) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE INT ID(i) BECOMES CONSTANT(0) SEMICOLON INT ID(i) BECOMES CONSTANT(0) SEMICOLON PRINTLN LPAREN ID(i) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_rtfail_12) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE INT LBRACKET RBRACKET ID(arr) BECOMES NEW INT LBRACKET CONSTANT(1) RBRACKET SEMICOLON ID(TestUnin) ID(test) BECOMES NEW ID(TestUnin) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN ID(arr) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestUnin) LCURLYBRACE PUBLIC VOID ID(test) LPAREN INT LBRACKET RBRACKET ID(i) RPAREN LCURLYBRACE INT ID(count) BECOMES CONSTANT(0) SEMICOLON WHILE LPAREN TRUE RPAREN LCURLYBRACE ID(i) LBRACKET ID(count) RBRACKET BECOMES CONSTANT(1) SEMICOLON ID(count) BECOMES ID(count) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_00) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_18) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(TestFailure) ID(test) BECOMES NEW ID(TestFailure) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestFailure) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE RETURN CONSTANT(1) SEMICOLON PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_04) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestObjects) LPAREN CONSTANT(100) RPAREN DOT ID(value) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestObjects) LCURLYBRACE ID(private) INT ID(value) SEMICOLON PUBLIC ID(TestObjects) LPAREN INT ID(value) RPAREN LCURLYBRACE THIS DOT ID(value) BECOMES ID(value) SEMICOLON RCURLYBRACE PUBLIC INT ID(value) LPAREN RPAREN LCURLYBRACE RETURN ID(value) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(BubbleSort) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(BBS) LPAREN RPAREN DOT ID(Start) LPAREN CONSTANT(10) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE COMMENT COMMENT COMMENT CLASS ID(BBS) LCURLYBRACE INT LBRACKET RBRACKET ID(number) SEMICOLON INT ID(size) SEMICOLON COMMENT COMMENT PUBLIC INT ID(Start) LPAREN INT ID(sz) RPAREN LCURLYBRACE INT ID(aux01) SEMICOLON ID(aux01) BECOMES THIS DOT ID(Init) LPAREN ID(sz) RPAREN SEMICOLON ID(aux01) BECOMES THIS DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(99999) RPAREN SEMICOLON ID(aux01) BECOMES THIS DOT ID(Sort) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES THIS DOT ID(Print) LPAREN RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Sort) LPAREN RPAREN LCURLYBRACE INT ID(nt) SEMICOLON INT ID(i) SEMICOLON INT ID(aux02) SEMICOLON INT ID(aux04) SEMICOLON INT ID(aux05) SEMICOLON INT ID(aux06) SEMICOLON INT ID(aux07) SEMICOLON INT ID(j) SEMICOLON INT ID(t) SEMICOLON ID(i) BECOMES ID(size) MINUS CONSTANT(1) SEMICOLON ID(aux02) BECOMES CONSTANT(0) MINUS CONSTANT(1) SEMICOLON WHILE LPAREN ID(aux02) LESS ID(i) RPAREN LCURLYBRACE ID(j) BECOMES CONSTANT(1) SEMICOLON COMMENT WHILE LPAREN ID(j) LESS LPAREN ID(i) PLUS CONSTANT(1) RPAREN RPAREN LCURLYBRACE ID(aux07) BECOMES ID(j) MINUS CONSTANT(1) SEMICOLON ID(aux04) BECOMES ID(number) LBRACKET ID(aux07) RBRACKET SEMICOLON ID(aux05) BECOMES ID(number) LBRACKET ID(j) RBRACKET SEMICOLON IF LPAREN ID(aux05) LESS ID(aux04) RPAREN LCURLYBRACE ID(aux06) BECOMES ID(j) MINUS CONSTANT(1) SEMICOLON ID(t) BECOMES ID(number) LBRACKET ID(aux06) RBRACKET SEMICOLON ID(number) LBRACKET ID(aux06) RBRACKET BECOMES ID(number) LBRACKET ID(j) RBRACKET SEMICOLON ID(number) LBRACKET ID(j) RBRACKET BECOMES ID(t) SEMICOLON RCURLYBRACE ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE ID(i) BECOMES ID(i) MINUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Print) LPAREN RPAREN LCURLYBRACE INT ID(j) SEMICOLON ID(j) BECOMES CONSTANT(0) SEMICOLON WHILE LPAREN ID(j) LESS LPAREN ID(size) RPAREN RPAREN LCURLYBRACE PRINTLN LPAREN ID(number) LBRACKET ID(j) RBRACKET RPAREN SEMICOLON ID(j) BECOMES ID(j) PLUS CONSTANT(1) SEMICOLON RCURLYBRACE RETURN CONSTANT(0) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Init) LPAREN INT ID(sz) RPAREN LCURLYBRACE ID(size) BECOMES ID(sz) SEMICOLON ID(number) BECOMES NEW INT LBRACKET ID(sz) RBRACKET SEMICOLON ID(number) LBRACKET CONSTANT(0) RBRACKET BECOMES CONSTANT(20) SEMICOLON ID(number) LBRACKET CONSTANT(1) RBRACKET BECOMES CONSTANT(7) SEMICOLON ID(number) LBRACKET CONSTANT(2) RBRACKET BECOMES CONSTANT(12) SEMICOLON ID(number) LBRACKET CONSTANT(3) RBRACKET BECOMES CONSTANT(18) SEMICOLON ID(number) LBRACKET CONSTANT(4) RBRACKET BECOMES CONSTANT(2) SEMICOLON ID(number) LBRACKET CONSTANT(5) RBRACKET BECOMES CONSTANT(11) SEMICOLON ID(number) LBRACKET CONSTANT(6) RBRACKET BECOMES CONSTANT(6) SEMICOLON ID(number) LBRACKET CONSTANT(7) RBRACKET BECOMES CONSTANT(9) SEMICOLON ID(number) LBRACKET CONSTANT(8) RBRACKET BECOMES CONSTANT(19) SEMICOLON ID(number) LBRACKET CONSTANT(9) RBRACKET BECOMES CONSTANT(5) SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_01) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestIntLiteralArithmetic) LPAREN RPAREN DOT ID(test) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestIntLiteralArithmetic) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(1) PLUS CONSTANT(1) RPAREN SEMICOLON COMMENT PRINTLN LPAREN CONSTANT(3) MINUS CONSTANT(2) RPAREN SEMICOLON COMMENT PRINTLN LPAREN CONSTANT(2) MULT CONSTANT(2) RPAREN SEMICOLON COMMENT PRINTLN LPAREN CONSTANT(2) DIV CONSTANT(2) RPAREN SEMICOLON COMMENT PRINTLN LPAREN CONSTANT(3) MOD CONSTANT(2) RPAREN SEMICOLON COMMENT RETURN CONSTANT(1) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT COMMENT COMMENT CLASS ID(TreeVisitor) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TV) LPAREN RPAREN DOT ID(Start) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TV) LCURLYBRACE PUBLIC INT ID(Start) LPAREN RPAREN LCURLYBRACE ID(Tree) ID(root) SEMICOLON BOOLEAN ID(ntb) SEMICOLON INT ID(nti) SEMICOLON ID(MyVisitor) ID(v) SEMICOLON ID(root) BECOMES NEW ID(Tree) LPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Init) LPAREN CONSTANT(16) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(100000000) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(8) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(24) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(4) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(12) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(20) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(28) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Insert) LPAREN CONSTANT(14) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(100000000) RPAREN SEMICOLON ID(v) BECOMES NEW ID(MyVisitor) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(50000000) RPAREN SEMICOLON ID(nti) BECOMES ID(root) DOT ID(accept) LPAREN ID(v) RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(100000000) RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(24) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(16) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(50) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(root) D_CONSTANT(.D) ID(elete) LPAREN CONSTANT(12) RPAREN SEMICOLON ID(ntb) BECOMES ID(root) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(root) DOT ID(Search) LPAREN CONSTANT(12) RPAREN RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Tree) LCURLYBRACE ID(Tree) ID(left) SEMICOLON ID(Tree) ID(right) SEMICOLON INT ID(key) SEMICOLON BOOLEAN ID(has_left) SEMICOLON BOOLEAN ID(has_right) SEMICOLON ID(Tree) ID(my_null) SEMICOLON COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT PUBLIC BOOLEAN ID(Init) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(key) BECOMES ID(v_key) SEMICOLON ID(has_left) BECOMES FALSE SEMICOLON ID(has_right) BECOMES FALSE SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetRight) LPAREN ID(Tree) ID(rn) RPAREN LCURLYBRACE ID(right) BECOMES ID(rn) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetLeft) LPAREN ID(Tree) ID(ln) RPAREN LCURLYBRACE ID(left) BECOMES ID(ln) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC ID(Tree) ID(GetRight) LPAREN RPAREN LCURLYBRACE RETURN ID(right) SEMICOLON RCURLYBRACE PUBLIC ID(Tree) ID(GetLeft) LPAREN RPAREN LCURLYBRACE RETURN ID(left) SEMICOLON RCURLYBRACE PUBLIC INT ID(GetKey) LPAREN RPAREN LCURLYBRACE RETURN ID(key) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetKey) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(key) BECOMES ID(v_key) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(GetHas_Right) LPAREN RPAREN LCURLYBRACE RETURN ID(has_right) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(GetHas_Left) LPAREN RPAREN LCURLYBRACE RETURN ID(has_left) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetHas_Left) LPAREN BOOLEAN ID(val) RPAREN LCURLYBRACE ID(has_left) BECOMES ID(val) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(SetHas_Right) LPAREN BOOLEAN ID(val) RPAREN LCURLYBRACE ID(has_right) BECOMES ID(val) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(Compare) LPAREN INT ID(num1) COMMA INT ID(num2) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON INT ID(nti) SEMICOLON ID(ntb) BECOMES FALSE SEMICOLON ID(nti) BECOMES ID(num2) PLUS CONSTANT(1) SEMICOLON IF LPAREN ID(num1) LESS ID(num2) RPAREN ID(ntb) BECOMES FALSE SEMICOLON ELSE IF LPAREN NOT LPAREN ID(num1) LESS ID(nti) RPAREN RPAREN ID(ntb) BECOMES FALSE SEMICOLON ELSE ID(ntb) BECOMES TRUE SEMICOLON RETURN ID(ntb) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(Insert) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(Tree) ID(new_node) SEMICOLON BOOLEAN ID(ntb) SEMICOLON ID(Tree) ID(current_node) SEMICOLON BOOLEAN ID(cont) SEMICOLON INT ID(key_aux) SEMICOLON ID(new_node) BECOMES NEW ID(Tree) LPAREN RPAREN SEMICOLON ID(ntb) BECOMES ID(new_node) DOT ID(Init) LPAREN ID(v_key) RPAREN SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(cont) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont) RPAREN LCURLYBRACE ID(key_aux) BECOMES ID(current_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN ID(v_key) LESS ID(key_aux) RPAREN LCURLYBRACE IF LPAREN ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON ELSE LCURLYBRACE ID(cont) BECOMES FALSE SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetHas_Left) LPAREN TRUE RPAREN SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetLeft) LPAREN ID(new_node) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE ELSE LCURLYBRACE IF LPAREN ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON ELSE LCURLYBRACE ID(cont) BECOMES FALSE SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetHas_Right) LPAREN TRUE RPAREN SEMICOLON ID(ntb) BECOMES ID(current_node) DOT ID(SetRight) LPAREN ID(new_node) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE RCURLYBRACE RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(Delete) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(Tree) ID(current_node) SEMICOLON ID(Tree) ID(parent_node) SEMICOLON BOOLEAN ID(cont) SEMICOLON BOOLEAN ID(found) SEMICOLON BOOLEAN ID(ntb) SEMICOLON BOOLEAN ID(is_root) SEMICOLON INT ID(key_aux) SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(parent_node) BECOMES THIS SEMICOLON ID(cont) BECOMES TRUE SEMICOLON ID(found) BECOMES FALSE SEMICOLON ID(is_root) BECOMES TRUE SEMICOLON WHILE LPAREN ID(cont) RPAREN LCURLYBRACE ID(key_aux) BECOMES ID(current_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN ID(v_key) LESS ID(key_aux) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE ID(parent_node) BECOMES ID(current_node) SEMICOLON ID(current_node) BECOMES ID(current_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE IF LPAREN ID(key_aux) LESS ID(v_key) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE ID(parent_node) BECOMES ID(current_node) SEMICOLON ID(current_node) BECOMES ID(current_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE LCURLYBRACE IF LPAREN ID(is_root) RPAREN IF LPAREN NOT ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN AND NOT ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(ntb) BECOMES TRUE SEMICOLON ELSE ID(ntb) BECOMES THIS DOT ID(Remove) LPAREN ID(parent_node) COMMA ID(current_node) RPAREN SEMICOLON ELSE ID(ntb) BECOMES THIS DOT ID(Remove) LPAREN ID(parent_node) COMMA ID(current_node) RPAREN SEMICOLON ID(found) BECOMES TRUE SEMICOLON ID(cont) BECOMES FALSE SEMICOLON RCURLYBRACE ID(is_root) BECOMES FALSE SEMICOLON RCURLYBRACE RETURN ID(found) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(Remove) LPAREN ID(Tree) ID(p_node) COMMA ID(Tree) ID(c_node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON INT ID(auxkey1) SEMICOLON INT ID(auxkey2) SEMICOLON IF LPAREN ID(c_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(ntb) BECOMES THIS DOT ID(RemoveLeft) LPAREN ID(p_node) COMMA ID(c_node) RPAREN SEMICOLON ELSE IF LPAREN ID(c_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN ID(ntb) BECOMES THIS DOT ID(RemoveRight) LPAREN ID(p_node) COMMA ID(c_node) RPAREN SEMICOLON ELSE LCURLYBRACE ID(auxkey1) BECOMES ID(c_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON ID(auxkey2) BECOMES LPAREN ID(p_node) DOT ID(GetLeft) LPAREN RPAREN RPAREN DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN THIS DOT ID(Compare) LPAREN ID(auxkey1) COMMA ID(auxkey2) RPAREN RPAREN LCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetLeft) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Left) LPAREN FALSE RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetRight) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Right) LPAREN FALSE RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(RemoveRight) LPAREN ID(Tree) ID(p_node) COMMA ID(Tree) ID(c_node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON WHILE LPAREN ID(c_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE ID(ntb) BECOMES ID(c_node) DOT ID(SetKey) LPAREN LPAREN ID(c_node) DOT ID(GetRight) LPAREN RPAREN RPAREN DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON ID(p_node) BECOMES ID(c_node) SEMICOLON ID(c_node) BECOMES ID(c_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON RCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetRight) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Right) LPAREN FALSE RPAREN SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(RemoveLeft) LPAREN ID(Tree) ID(p_node) COMMA ID(Tree) ID(c_node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON WHILE LPAREN ID(c_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE ID(ntb) BECOMES ID(c_node) DOT ID(SetKey) LPAREN LPAREN ID(c_node) DOT ID(GetLeft) LPAREN RPAREN RPAREN DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON ID(p_node) BECOMES ID(c_node) SEMICOLON ID(c_node) BECOMES ID(c_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON RCURLYBRACE ID(ntb) BECOMES ID(p_node) DOT ID(SetLeft) LPAREN ID(my_null) RPAREN SEMICOLON ID(ntb) BECOMES ID(p_node) DOT ID(SetHas_Left) LPAREN FALSE RPAREN SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC INT ID(Search) LPAREN INT ID(v_key) RPAREN LCURLYBRACE ID(Tree) ID(current_node) SEMICOLON INT ID(ifound) SEMICOLON BOOLEAN ID(cont) SEMICOLON INT ID(key_aux) SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(cont) BECOMES TRUE SEMICOLON ID(ifound) BECOMES CONSTANT(0) SEMICOLON WHILE LPAREN ID(cont) RPAREN LCURLYBRACE ID(key_aux) BECOMES ID(current_node) DOT ID(GetKey) LPAREN RPAREN SEMICOLON IF LPAREN ID(v_key) LESS ID(key_aux) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE IF LPAREN ID(key_aux) LESS ID(v_key) RPAREN IF LPAREN ID(current_node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN ID(current_node) BECOMES ID(current_node) DOT ID(GetRight) LPAREN RPAREN SEMICOLON ELSE ID(cont) BECOMES FALSE SEMICOLON ELSE LCURLYBRACE ID(ifound) BECOMES CONSTANT(1) SEMICOLON ID(cont) BECOMES FALSE SEMICOLON RCURLYBRACE RCURLYBRACE RETURN ID(ifound) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(Print) LPAREN RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON ID(Tree) ID(current_node) SEMICOLON ID(current_node) BECOMES THIS SEMICOLON ID(ntb) BECOMES THIS DOT ID(RecPrint) LPAREN ID(current_node) RPAREN SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(RecPrint) LPAREN ID(Tree) ID(node) RPAREN LCURLYBRACE BOOLEAN ID(ntb) SEMICOLON IF LPAREN ID(node) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE ID(ntb) BECOMES THIS DOT ID(RecPrint) LPAREN ID(node) DOT ID(GetLeft) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(ntb) BECOMES TRUE SEMICOLON PRINTLN LPAREN ID(node) DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON IF LPAREN ID(node) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE ID(ntb) BECOMES THIS DOT ID(RecPrint) LPAREN ID(node) DOT ID(GetRight) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE ELSE ID(ntb) BECOMES TRUE SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC INT ID(accept) LPAREN ID(Visitor) ID(v) RPAREN LCURLYBRACE INT ID(nti) SEMICOLON PRINTLN LPAREN CONSTANT(333) RPAREN SEMICOLON ID(nti) BECOMES ID(v) DOT ID(visit) LPAREN THIS RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Visitor) LCURLYBRACE ID(Tree) ID(l) SEMICOLON ID(Tree) ID(r) SEMICOLON PUBLIC INT ID(visit) LPAREN ID(Tree) ID(n) RPAREN LCURLYBRACE INT ID(nti) SEMICOLON IF LPAREN ID(n) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE ID(r) BECOMES ID(n) DOT ID(GetRight) LPAREN RPAREN SEMICOLON ID(nti) BECOMES ID(r) DOT ID(accept) LPAREN THIS RPAREN SEMICOLON RCURLYBRACE ELSE ID(nti) BECOMES CONSTANT(0) SEMICOLON IF LPAREN ID(n) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE ID(l) BECOMES ID(n) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON ID(nti) BECOMES ID(l) DOT ID(accept) LPAREN THIS RPAREN SEMICOLON RCURLYBRACE ELSE ID(nti) BECOMES CONSTANT(0) SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(MyVisitor) EXTENDS ID(Visitor) LCURLYBRACE PUBLIC INT ID(visit) LPAREN ID(Tree) ID(n) RPAREN LCURLYBRACE INT ID(nti) SEMICOLON IF LPAREN ID(n) DOT ID(GetHas_Right) LPAREN RPAREN RPAREN LCURLYBRACE ID(r) BECOMES ID(n) DOT ID(GetRight) LPAREN RPAREN SEMICOLON ID(nti) BECOMES ID(r) DOT ID(accept) LPAREN THIS RPAREN SEMICOLON RCURLYBRACE ELSE ID(nti) BECOMES CONSTANT(0) SEMICOLON PRINTLN LPAREN ID(n) DOT ID(GetKey) LPAREN RPAREN RPAREN SEMICOLON IF LPAREN ID(n) DOT ID(GetHas_Left) LPAREN RPAREN RPAREN LCURLYBRACE ID(l) BECOMES ID(n) DOT ID(GetLeft) LPAREN RPAREN SEMICOLON ID(nti) BECOMES ID(l) DOT ID(accept) LPAREN THIS RPAREN SEMICOLON RCURLYBRACE ELSE ID(nti) BECOMES CONSTANT(0) SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_19) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE INT LBRACKET RBRACKET ID(i) BECOMES NEW INT LBRACKET CONSTANT(10) RBRACKET SEMICOLON INT LBRACKET RBRACKET ID(j) BECOMES NEW INT LBRACKET CONSTANT(10) RBRACKET SEMICOLON ID(i) BECOMES ID(j) DIV ID(i) SEMICOLON PRINTLN LPAREN ID(i) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] CLASS ID(LinkedList) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(a) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(LL) LPAREN RPAREN DOT ID(Start) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Element) LCURLYBRACE INT ID(Age) SEMICOLON INT ID(Salary) SEMICOLON BOOLEAN ID(Married) SEMICOLON COMMENT PUBLIC BOOLEAN ID(Init) LPAREN INT ID(v_Age) COMMA INT ID(v_Salary) COMMA BOOLEAN ID(v_Married) RPAREN LCURLYBRACE ID(Age) BECOMES ID(v_Age) SEMICOLON ID(Salary) BECOMES ID(v_Salary) SEMICOLON ID(Married) BECOMES ID(v_Married) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE PUBLIC INT ID(GetAge) LPAREN RPAREN LCURLYBRACE RETURN ID(Age) SEMICOLON RCURLYBRACE PUBLIC INT ID(GetSalary) LPAREN RPAREN LCURLYBRACE RETURN ID(Salary) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(GetMarried) LPAREN RPAREN LCURLYBRACE RETURN ID(Married) SEMICOLON RCURLYBRACE COMMENT COMMENT PUBLIC BOOLEAN ID(Equal) LPAREN ID(Element) ID(other) RPAREN LCURLYBRACE BOOLEAN ID(ret_val) SEMICOLON INT ID(aux01) SEMICOLON INT ID(aux02) SEMICOLON INT ID(nt) SEMICOLON ID(ret_val) BECOMES TRUE SEMICOLON ID(aux01) BECOMES ID(other) DOT ID(GetAge) LPAREN RPAREN SEMICOLON IF LPAREN NOT THIS DOT ID(Compare) LPAREN ID(aux01) COMMA ID(Age) RPAREN RPAREN ID(ret_val) BECOMES FALSE SEMICOLON ELSE LCURLYBRACE ID(aux02) BECOMES ID(other) DOT ID(GetSalary) LPAREN RPAREN SEMICOLON IF LPAREN NOT THIS DOT ID(Compare) LPAREN ID(aux02) COMMA ID(Salary) RPAREN RPAREN ID(ret_val) BECOMES FALSE SEMICOLON ELSE IF LPAREN ID(Married) RPAREN IF LPAREN NOT ID(other) DOT ID(GetMarried) LPAREN RPAREN RPAREN ID(ret_val) BECOMES FALSE SEMICOLON ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON ELSE IF LPAREN ID(other) DOT ID(GetMarried) LPAREN RPAREN RPAREN ID(ret_val) BECOMES FALSE SEMICOLON ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON RCURLYBRACE RETURN ID(ret_val) SEMICOLON RCURLYBRACE COMMENT COMMENT COMMENT PUBLIC BOOLEAN ID(Compare) LPAREN INT ID(num1) COMMA INT ID(num2) RPAREN LCURLYBRACE BOOLEAN ID(retval) SEMICOLON INT ID(aux02) SEMICOLON ID(retval) BECOMES FALSE SEMICOLON ID(aux02) BECOMES ID(num2) PLUS CONSTANT(1) SEMICOLON IF LPAREN ID(num1) LESS ID(num2) RPAREN ID(retval) BECOMES FALSE SEMICOLON ELSE IF LPAREN NOT LPAREN ID(num1) LESS ID(aux02) RPAREN RPAREN ID(retval) BECOMES FALSE SEMICOLON ELSE ID(retval) BECOMES TRUE SEMICOLON RETURN ID(retval) SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(List) LCURLYBRACE ID(Element) ID(elem) SEMICOLON ID(List) ID(next) SEMICOLON BOOLEAN ID(end) SEMICOLON COMMENT PUBLIC BOOLEAN ID(Init) LPAREN RPAREN LCURLYBRACE ID(end) BECOMES TRUE SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(InitNew) LPAREN ID(Element) ID(v_elem) COMMA ID(List) ID(v_next) COMMA BOOLEAN ID(v_end) RPAREN LCURLYBRACE ID(end) BECOMES ID(v_end) SEMICOLON ID(elem) BECOMES ID(v_elem) SEMICOLON ID(next) BECOMES ID(v_next) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC ID(List) ID(Insert) LPAREN ID(Element) ID(new_elem) RPAREN LCURLYBRACE BOOLEAN ID(ret_val) SEMICOLON ID(List) ID(aux03) SEMICOLON ID(List) ID(aux02) SEMICOLON ID(aux03) BECOMES THIS SEMICOLON ID(aux02) BECOMES NEW ID(List) LPAREN RPAREN SEMICOLON ID(ret_val) BECOMES ID(aux02) DOT ID(InitNew) LPAREN ID(new_elem) COMMA ID(aux03) COMMA FALSE RPAREN SEMICOLON RETURN ID(aux02) SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(SetNext) LPAREN ID(List) ID(v_next) RPAREN LCURLYBRACE ID(next) BECOMES ID(v_next) SEMICOLON RETURN TRUE SEMICOLON RCURLYBRACE COMMENT PUBLIC ID(List) ID(Delete) LPAREN ID(Element) ID(e) RPAREN LCURLYBRACE ID(List) ID(my_head) SEMICOLON BOOLEAN ID(ret_val) SEMICOLON BOOLEAN ID(aux05) SEMICOLON ID(List) ID(aux01) SEMICOLON ID(List) ID(prev) SEMICOLON BOOLEAN ID(var_end) SEMICOLON ID(Element) ID(var_elem) SEMICOLON INT ID(aux04) SEMICOLON INT ID(nt) SEMICOLON ID(my_head) BECOMES THIS SEMICOLON ID(ret_val) BECOMES FALSE SEMICOLON ID(aux04) BECOMES CONSTANT(0) MINUS CONSTANT(1) SEMICOLON ID(aux01) BECOMES THIS SEMICOLON ID(prev) BECOMES THIS SEMICOLON ID(var_end) BECOMES ID(end) SEMICOLON ID(var_elem) BECOMES ID(elem) SEMICOLON WHILE LPAREN LPAREN NOT ID(var_end) RPAREN AND LPAREN NOT ID(ret_val) RPAREN RPAREN LCURLYBRACE IF LPAREN ID(e) DOT ID(Equal) LPAREN ID(var_elem) RPAREN RPAREN LCURLYBRACE ID(ret_val) BECOMES TRUE SEMICOLON IF LPAREN ID(aux04) LESS CONSTANT(0) RPAREN LCURLYBRACE COMMENT ID(my_head) BECOMES ID(aux01) DOT ID(GetNext) LPAREN RPAREN SEMICOLON RCURLYBRACE ELSE LCURLYBRACE COMMENT PRINTLN LPAREN CONSTANT(0) MINUS CONSTANT(555) RPAREN SEMICOLON ID(aux05) BECOMES ID(prev) DOT ID(SetNext) LPAREN ID(aux01) DOT ID(GetNext) LPAREN RPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(0) MINUS CONSTANT(555) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON IF LPAREN NOT ID(ret_val) RPAREN LCURLYBRACE ID(prev) BECOMES ID(aux01) SEMICOLON ID(aux01) BECOMES ID(aux01) DOT ID(GetNext) LPAREN RPAREN SEMICOLON ID(var_end) BECOMES ID(aux01) DOT ID(GetEnd) LPAREN RPAREN SEMICOLON ID(var_elem) BECOMES ID(aux01) DOT ID(GetElem) LPAREN RPAREN SEMICOLON ID(aux04) BECOMES CONSTANT(1) SEMICOLON RCURLYBRACE ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON RCURLYBRACE RETURN ID(my_head) SEMICOLON RCURLYBRACE COMMENT PUBLIC INT ID(Search) LPAREN ID(Element) ID(e) RPAREN LCURLYBRACE INT ID(int_ret_val) SEMICOLON ID(List) ID(aux01) SEMICOLON ID(Element) ID(var_elem) SEMICOLON BOOLEAN ID(var_end) SEMICOLON INT ID(nt) SEMICOLON ID(int_ret_val) BECOMES CONSTANT(0) SEMICOLON ID(aux01) BECOMES THIS SEMICOLON ID(var_end) BECOMES ID(end) SEMICOLON ID(var_elem) BECOMES ID(elem) SEMICOLON WHILE LPAREN NOT ID(var_end) RPAREN LCURLYBRACE IF LPAREN ID(e) DOT ID(Equal) LPAREN ID(var_elem) RPAREN RPAREN LCURLYBRACE ID(int_ret_val) BECOMES CONSTANT(1) SEMICOLON RCURLYBRACE ELSE ID(nt) BECOMES CONSTANT(0) SEMICOLON ID(aux01) BECOMES ID(aux01) DOT ID(GetNext) LPAREN RPAREN SEMICOLON ID(var_end) BECOMES ID(aux01) DOT ID(GetEnd) LPAREN RPAREN SEMICOLON ID(var_elem) BECOMES ID(aux01) DOT ID(GetElem) LPAREN RPAREN SEMICOLON RCURLYBRACE RETURN ID(int_ret_val) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(GetEnd) LPAREN RPAREN LCURLYBRACE RETURN ID(end) SEMICOLON RCURLYBRACE PUBLIC ID(Element) ID(GetElem) LPAREN RPAREN LCURLYBRACE RETURN ID(elem) SEMICOLON RCURLYBRACE PUBLIC ID(List) ID(GetNext) LPAREN RPAREN LCURLYBRACE RETURN ID(next) SEMICOLON RCURLYBRACE COMMENT PUBLIC BOOLEAN ID(Print) LPAREN RPAREN LCURLYBRACE ID(List) ID(aux01) SEMICOLON BOOLEAN ID(var_end) SEMICOLON ID(Element) ID(var_elem) SEMICOLON ID(aux01) BECOMES THIS SEMICOLON ID(var_end) BECOMES ID(end) SEMICOLON ID(var_elem) BECOMES ID(elem) SEMICOLON WHILE LPAREN NOT ID(var_end) RPAREN LCURLYBRACE PRINTLN LPAREN ID(var_elem) DOT ID(GetAge) LPAREN RPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(aux01) DOT ID(GetNext) LPAREN RPAREN SEMICOLON ID(var_end) BECOMES ID(aux01) DOT ID(GetEnd) LPAREN RPAREN SEMICOLON ID(var_elem) BECOMES ID(aux01) DOT ID(GetElem) LPAREN RPAREN SEMICOLON RCURLYBRACE RETURN TRUE SEMICOLON RCURLYBRACE RCURLYBRACE COMMENT COMMENT CLASS ID(LL) LCURLYBRACE PUBLIC INT ID(Start) LPAREN RPAREN LCURLYBRACE ID(List) ID(head) SEMICOLON ID(List) ID(last_elem) SEMICOLON BOOLEAN ID(aux01) SEMICOLON ID(Element) ID(el01) SEMICOLON ID(Element) ID(el02) SEMICOLON ID(Element) ID(el03) SEMICOLON ID(last_elem) BECOMES NEW ID(List) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(last_elem) DOT ID(Init) LPAREN RPAREN SEMICOLON ID(head) BECOMES ID(last_elem) SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Init) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON COMMENT ID(el01) BECOMES NEW ID(Element) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(el01) DOT ID(Init) LPAREN CONSTANT(25) COMMA CONSTANT(37000) COMMA FALSE RPAREN SEMICOLON ID(head) BECOMES ID(head) DOT ID(Insert) LPAREN ID(el01) RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(10000000) RPAREN SEMICOLON COMMENT ID(el01) BECOMES NEW ID(Element) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(el01) DOT ID(Init) LPAREN CONSTANT(39) COMMA CONSTANT(42000) COMMA TRUE RPAREN SEMICOLON ID(el02) BECOMES ID(el01) SEMICOLON ID(head) BECOMES ID(head) DOT ID(Insert) LPAREN ID(el01) RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(10000000) RPAREN SEMICOLON COMMENT ID(el01) BECOMES NEW ID(Element) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(el01) DOT ID(Init) LPAREN CONSTANT(22) COMMA CONSTANT(34000) COMMA FALSE RPAREN SEMICOLON ID(head) BECOMES ID(head) DOT ID(Insert) LPAREN ID(el01) RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON ID(el03) BECOMES NEW ID(Element) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(el03) DOT ID(Init) LPAREN CONSTANT(27) COMMA CONSTANT(34000) COMMA FALSE RPAREN SEMICOLON PRINTLN LPAREN ID(head) DOT ID(Search) LPAREN ID(el02) RPAREN RPAREN SEMICOLON PRINTLN LPAREN ID(head) DOT ID(Search) LPAREN ID(el03) RPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(10000000) RPAREN SEMICOLON COMMENT ID(el01) BECOMES NEW ID(Element) LPAREN RPAREN SEMICOLON ID(aux01) BECOMES ID(el01) DOT ID(Init) LPAREN CONSTANT(28) COMMA CONSTANT(35000) COMMA FALSE RPAREN SEMICOLON ID(head) BECOMES ID(head) DOT ID(Insert) LPAREN ID(el01) RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(2220000) RPAREN SEMICOLON ID(head) BECOMES ID(head) D_CONSTANT(.D) ID(elete) LPAREN ID(el02) RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(33300000) RPAREN SEMICOLON ID(head) BECOMES ID(head) D_CONSTANT(.D) ID(elete) LPAREN ID(el01) RPAREN SEMICOLON ID(aux01) BECOMES ID(head) DOT ID(Print) LPAREN RPAREN SEMICOLON PRINTLN LPAREN CONSTANT(44440000) RPAREN SEMICOLON RETURN CONSTANT(0) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_05) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestInheritanceSimple) LPAREN RPAREN DOT ID(test) LPAREN RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestInheritanceSimple) LCURLYBRACE PUBLIC INT ID(test) LPAREN RPAREN LCURLYBRACE ID(Person) ID(p) BECOMES NEW ID(Male) LPAREN CONSTANT(21) RPAREN SEMICOLON IF LPAREN ID(p) DOT ID(getIsMale) LPAREN RPAREN RPAREN LCURLYBRACE PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RETURN ID(p) DOT ID(getAge) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Person) LCURLYBRACE INT ID(age) SEMICOLON BOOLEAN ID(isMale) SEMICOLON PUBLIC ID(Person) LPAREN RPAREN LCURLYBRACE ID(age) BECOMES CONSTANT(0) SEMICOLON ID(isMale) BECOMES FALSE SEMICOLON RCURLYBRACE PUBLIC ID(Person) LPAREN INT ID(a) RPAREN LCURLYBRACE ID(age) BECOMES ID(a) SEMICOLON ID(isMale) BECOMES FALSE SEMICOLON RCURLYBRACE PUBLIC ID(Person) LPAREN INT ID(a) COMMA BOOLEAN ID(m) RPAREN LCURLYBRACE ID(age) BECOMES ID(a) SEMICOLON ID(isMale) BECOMES ID(m) SEMICOLON RCURLYBRACE PUBLIC INT ID(getAge) LPAREN RPAREN LCURLYBRACE RETURN ID(age) SEMICOLON RCURLYBRACE PUBLIC BOOLEAN ID(getIsMale) LPAREN RPAREN LCURLYBRACE RETURN ID(isMale) SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(Male) EXTENDS ID(Person) LCURLYBRACE PUBLIC ID(Male) LPAREN INT ID(a) RPAREN LCURLYBRACE ID(age) BECOMES ID(a) SEMICOLON ID(isMale) BECOMES TRUE SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_20) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(TestFailure) ID(test) BECOMES NEW ID(TestFailure) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestFailure) LCURLYBRACE PUBLIC VOID ID(test) LPAREN RPAREN LCURLYBRACE RETURN CONSTANT(1) SEMICOLON PRINTLN LPAREN CONSTANT(1) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_correct_09) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE ID(TestDoubleArithmatic) ID(test) BECOMES NEW ID(TestDoubleArithmatic) LPAREN RPAREN SEMICOLON ID(test) DOT ID(test) LPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestDoubleArithmatic) LCURLYBRACE PUBLIC VOID ID(test) LPAREN RPAREN LCURLYBRACE PRINTLN LPAREN D_CONSTANT(0.5) PLUS D_CONSTANT(5e-1) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(2e+4) MINUS D_CONSTANT(19999D) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(4.00d) MULT D_CONSTANT(.25) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(4D) DIV D_CONSTANT(4e00) RPAREN SEMICOLON PRINTLN LPAREN D_CONSTANT(5.D) MOD D_CONSTANT(4E00) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_11) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE INT ID(unin) SEMICOLON ID(unin) BECOMES ID(unin) PLUS CONSTANT(1) SEMICOLON ID(System) DOT ID(out) DOT ID(print) LPAREN ID(unin) RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] COMMENT CLASS ID(cse401c_ctfail_15) LCURLYBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID(args) RPAREN LCURLYBRACE PRINTLN LPAREN NEW ID(TestMismatchTypes) LPAREN RPAREN DOT ID(test) LPAREN CONSTANT(1) COMMA D_CONSTANT(1.0) RPAREN RPAREN SEMICOLON RCURLYBRACE RCURLYBRACE CLASS ID(TestMismatchTypes) LCURLYBRACE PUBLIC INT ID(test) LPAREN INT ID(x) COMMA DOUBLE ID(y) RPAREN LCURLYBRACE INT ID(test1) BECOMES ID(y) SEMICOLON DOUBLE ID(test2) BECOMES ID(x) SEMICOLON RETURN ID(x) PLUS ID(y) SEMICOLON RCURLYBRACE RCURLYBRACE 
     [java] Lexical analysis completed
     [java] DISPLAY CONSTANT(1) MULT CONSTANT(2) SEMICOLON 
     [java] Lexical analysis completed
     [java] ID(a) BECOMES ID(b) SEMICOLON ID(b) BECOMES ID(a) PLUS LPAREN ID(foo) PLUS ID(bar) RPAREN PLUS ID(baz) SEMICOLON DISPLAY ID(baz) SEMICOLON DISPLAY ID(b) SEMICOLON 
     [java] Lexical analysis completed

BUILD SUCCESSFUL
Total time: 23 seconds
